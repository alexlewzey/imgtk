[
  {
    "objectID": "imgtk.html",
    "href": "imgtk.html",
    "title": "imgtk",
    "section": "",
    "text": "source\n\nfmter\n\n fmter (src:Union[str,pathlib.Path], fmt:str='png')\n\nConvert image format\n\n\n\n\nType\nDefault\nDetails\n\n\n\n\nsrc\nUnion\n\nsource image path # fmt: skip\n\n\nfmt\nstr\npng\ntarget image format # fmt: skip\n\n\nReturns\nNone\n\n\n\n\n\nTest file is created by fmter\n\ndir_img = Path(\"images\").absolute()\nif (dir_img / \"mole.png\").exists():\n    (dir_img / \"mole.png\").unlink()\nfmter(dir_img / \"mole.jpg\", \"png\")\ntest_eq((dir_img / \"mole.png\").exists(), True)\n\nTest saved image has the same size as the original one\n\ntest_eq(imread(dir_img / \"mole.jpg\").shape, imread(dir_img / \"mole.png\").shape)\n\n\nsource\n\n\nrecolor\n\n recolor (src:str, trg:str, color:tuple[int,int,int])\n\nRecolor image except pixels with alpha=0\n\n\n\n\nType\nDetails\n\n\n\n\nsrc\nstr\nsource image path\n\n\ntrg\nstr\ntarget image path\n\n\ncolor\ntuple\ncolor to recolor to\n\n\nReturns\nNone\n\n\n\n\nTest file is created by recolor\n\nrgb = (0, 0, 255)\nblue_png = dir_img / \"mole-blue.png\"\nif blue_png.exists():\n    blue_png.unlink()\nrecolor(dir_img / \"mole-no-background.png\", blue_png, rgb)\ntest_eq(blue_png.exists(), True)\n\nTest rgb is equal to the most common pixel color in the target image.\n\nimg = Image.open(blue_png)\npixels = [img.getpixel((i, j)) for i, j in product(*map(range, img.size))]\npixel = pd.Series(pixels).value_counts().index[0][:3]\ntest_eq(pixel, (0, 0, 255))\n\n\nsource\n\n\npixel_color\n\n pixel_color (fmt:str='rgb')\n\nAdd the color of current mouse cursor position to the clipboard.\n\n\n\n\nType\nDefault\nDetails\n\n\n\n\nfmt\nstr\nrgb\nformat of retured color (rgb or hex) # fmt: skip\n\n\nReturns\nNone\n\n\n\n\n\n\ntest_eq(rgb2hex(*(24, 24, 24)), \"#181818\")\n# test_fail(lambda: pixel_color('wav'))\n\n\nsource\n\n\nmain\n\n main ()"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "imgtk",
    "section": "",
    "text": "This file will become your README and also the index of your documentation."
  },
  {
    "objectID": "index.html#install",
    "href": "index.html#install",
    "title": "imgtk",
    "section": "Install",
    "text": "Install\npip install imgtk"
  },
  {
    "objectID": "index.html#how-to-use",
    "href": "index.html#how-to-use",
    "title": "imgtk",
    "section": "How to use",
    "text": "How to use\nrecolor sets color of non-blank image pixels to a single rgb value.\n\ndir_img = Path(\"images\").absolute()\nrecolor(dir_img / \"mole-no-background.png\", dir_img / \"mole-pink.png\", (255, 0, 255))\n\nimgs = [Image.open(dir_img / f) for f in [\"mole-no-background.png\", \"mole-pink.png\"]]\n_, axs = plt.subplots(1, 2, figsize=(10, 18))\naxs = axs.flatten()\nfor img, ax, title in zip(imgs, axs, [\"before\", \"after\"]):\n    ax.imshow(img)\n    ax.axis(\"off\")\n    ax.set_title(title)\nplt.show()\n\n\n\n\npixel_color will copy the color of the current mouse cursor position to the clipboard.\n\n# pixel_color()\n# pyperclip.paste()\n\n'(42, 42, 42)'\n\n\nThe color can be returned in either rgb or hex format.\n\n# pixel_color('hex')\n# pyperclip.paste()\n\n'#181818'"
  }
]